{"ast":null,"code":"var _jsxFileName = \"/home/wabuor/Development/code/projects/phase-2/pars/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport Modal from './eventModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\nconst events = [{\n  title: \"BIg MEeting\",\n  alldate: true,\n  start: \"2023-04-05\",\n  end: \"2023-04-05\"\n}, {\n  title: \"Vacation\",\n  start: \"2023-06-01\",\n  end: \"2023-06-03\"\n}, {\n  title: \"Conference\",\n  start: new Date(2023, 6, 0),\n  end: new Date(2023, 6, 0)\n}];\nfunction App() {\n  _s();\n  const [selected, setSelected] = useState();\n\n  // const [modalState, setModalState] = useState(false)\n  const [isOpen, setIsOpen] = useState(false);\n\n  // const handleSelectedEvent = (event) => {\n  //    setSelectedEvent(event)\n  //    setModalState(true)\n  // }\n\n  const handleSelected = event => {\n    setSelected(event);\n    setIsOpen(true);\n    // console.info('[handleSelected - event]', event);\n    const eventDetails = event;\n    console.log(eventDetails);\n  };\n  const Modal = () => {\n    return (\n      /*#__PURE__*/\n      // Here you define your modal, what you want it to contain. \n      // Event title for example will be accessible via 'selectedEvent.title'\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleModal,\n          children: \"Open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selected.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [selected.start, selected.end]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \" close \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true)\n    );\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      selected: events.title,\n      onSelectEvent: handleSelected,\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 750,\n        margin: \"50px\"\n      },\n      onClick: console.log(\"test\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      details: handleSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kIDwaMlwTEmSQj6Gqr4IbZNLArA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","React","useState","DatePicker","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","locales","require","localizer","events","title","alldate","start","end","Date","App","_s","selected","setSelected","isOpen","setIsOpen","handleSelected","event","eventDetails","console","log","children","onClick","toggleModal","fileName","_jsxFileName","lineNumber","columnNumber","className","onSelectEvent","startAccessor","endAccessor","style","height","margin","details","_c","$RefreshReg$"],"sources":["/home/wabuor/Development/code/projects/phase-2/pars/src/App.js"],"sourcesContent":["import './App.css';\nimport {Calendar, dateFnsLocalizer} from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport React,{useState} from 'react';\nimport DatePicker from 'react-datepicker';\nimport Modal from './eventModal';\n\nconst locales = {\n  \"en-US\" : require(\"date-fns/locale/en-US\")\n}\n\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n})\n\nconst events = [\n  { \n    title: \"BIg MEeting\",\n    alldate: true,\n    start: \"2023-04-05\",\n    end: \"2023-04-05\"\n  },\n  {\n    title: \"Vacation\",\n    start: \"2023-06-01\",\n    end: \"2023-06-03\",\n  },\n  {\n    title: \"Conference\",\n    start: new Date(2023,6,0),\n    end: new Date(2023,6,0)\n  }\n]\n\n\n\n\nfunction App() {\n  const [selected, setSelected] = useState();\n\n  // const [modalState, setModalState] = useState(false)\n  const [isOpen, setIsOpen] = useState(false);\n  \n  // const handleSelectedEvent = (event) => {\n  //    setSelectedEvent(event)\n  //    setModalState(true)\n  // }\n\n  const handleSelected = (event) => {\n  setSelected(event);\n  setIsOpen(true)\n  // console.info('[handleSelected - event]', event);\n  const eventDetails = event;\n  console.log(eventDetails)\n};\n\n  const Modal = () => {\n      return (\n         \n\n            // Here you define your modal, what you want it to contain. \n            // Event title for example will be accessible via 'selectedEvent.title'\n\n            <>\n        <button\n        onClick={toggleModal}>\n            Open\n        </button>\n\n        <div>\n            <h2>{selected.title}</h2>\n            <p>\n                {selected.start}\n                {selected.end}\n            </p>\n            <button> close </button>\n        </div>\n        \n        \n        </>\n         \n\n      )\n      }\n\n  return (\n    <div className=\"App\">\n      <Calendar \n      selected={events.title}\n      onSelectEvent={handleSelected}\n      localizer={localizer} events={events} startAccessor=\"start\" endAccessor=\"end\"\n      style={{height:750 , margin: \"50px\"}} \n      onClick={console.log(\"test\")}  /> \n\n      <Modal details={handleSelected}/>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}