{"ast":null,"code":"var _jsxFileName = \"/home/wabuor/Development/code/projects/phase-2/pars/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\nconst events = [{\n  title: \"BIg MEeting\",\n  alldate: true,\n  start: \"2023-04-05\",\n  end: \"2023-04-05\"\n}, {\n  title: \"Vacation\",\n  start: \"2023-06-01\",\n  end: \"2023-06-03\"\n}, {\n  title: \"Conference\",\n  start: new Date(2023, 6, 0),\n  end: new Date(2023, 6, 0)\n}];\nfunction App() {\n  _s();\n  const [selected, setSelected] = useState();\n  const handleSelected = event => {\n    setSelected(event);\n    console.info('[handleSelected - event]', event);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      selected: id,\n      onSelectEvent: handleSelected,\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 750,\n        margin: \"50px\"\n      },\n      onClick: console.log(\"test\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kXmc8az0Vkgq+bIqhRCCKCKZWzs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","React","useState","DatePicker","jsxDEV","_jsxDEV","locales","require","localizer","events","title","alldate","start","end","Date","App","_s","selected","setSelected","handleSelected","event","console","info","className","children","id","onSelectEvent","startAccessor","endAccessor","style","height","margin","onClick","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/wabuor/Development/code/projects/phase-2/pars/src/App.js"],"sourcesContent":["import './App.css';\nimport {Calendar, dateFnsLocalizer} from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from 'date-fns/parse';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport React,{useState} from 'react';\nimport DatePicker from 'react-datepicker';\n\nconst locales = {\n  \"en-US\" : require(\"date-fns/locale/en-US\")\n}\n\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n})\n\nconst events = [\n  { \n    title: \"BIg MEeting\",\n    alldate: true,\n    start: \"2023-04-05\",\n    end: \"2023-04-05\"\n  },\n  {\n    title: \"Vacation\",\n    start: \"2023-06-01\",\n    end: \"2023-06-03\",\n  },\n  {\n    title: \"Conference\",\n    start: new Date(2023,6,0),\n    end: new Date(2023,6,0)\n  }\n]\n\n\n\n\nfunction App() {\n  const [selected, setSelected] = useState();\n\nconst handleSelected = (event) => {\n  setSelected(event);\n  console.info('[handleSelected - event]', event);\n};\n  return (\n    <div className=\"App\">\n      <Calendar \n      selected={id}\n      onSelectEvent={handleSelected}\n      localizer={localizer} events={events} startAccessor=\"start\" endAccessor=\"end\"\n      style={{height:750 , margin: \"50px\"}} \n      onClick={console.log(\"test\")}  /> \n      {/* <BigCalender onSelectEvent={console.log(\"test\")} /> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAAQA,QAAQ,EAAEC,gBAAgB,QAAO,oBAAoB;AAC7D,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAO,mDAAmD;AAC1D,OAAOC,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,UAAU,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAG;EACd,OAAO,EAAGC,OAAO,CAAC,uBAAuB;AAC3C,CAAC;AAED,MAAMC,SAAS,GAAGZ,gBAAgB,CAAC;EACjCC,MAAM;EACNC,KAAK;EACLC,WAAW;EACXC,MAAM;EACNM;AACF,CAAC,CAAC;AAEF,MAAMG,MAAM,GAAG,CACb;EACEC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,YAAY;EACnBC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,KAAK,EAAE,UAAU;EACjBE,KAAK,EAAE,YAAY;EACnBC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,KAAK,EAAE,YAAY;EACnBE,KAAK,EAAE,IAAIE,IAAI,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,CAAC;EACzBD,GAAG,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC;AACxB,CAAC,CACF;AAKD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAE5C,MAAMiB,cAAc,GAAIC,KAAK,IAAK;IAChCF,WAAW,CAACE,KAAK,CAAC;IAClBC,OAAO,CAACC,IAAI,CAAC,0BAA0B,EAAEF,KAAK,CAAC;EACjD,CAAC;EACC,oBACEf,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBnB,OAAA,CAACV,QAAQ;MACTsB,QAAQ,EAAEQ,EAAG;MACbC,aAAa,EAAEP,cAAe;MAC9BX,SAAS,EAAEA,SAAU;MAACC,MAAM,EAAEA,MAAO;MAACkB,aAAa,EAAC,OAAO;MAACC,WAAW,EAAC,KAAK;MAC7EC,KAAK,EAAE;QAACC,MAAM,EAAC,GAAG;QAAGC,MAAM,EAAE;MAAM,CAAE;MACrCC,OAAO,EAAEX,OAAO,CAACY,GAAG,CAAC,MAAM;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9B,CAAC;AAEV;AAACrB,EAAA,CAlBQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAoBZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}