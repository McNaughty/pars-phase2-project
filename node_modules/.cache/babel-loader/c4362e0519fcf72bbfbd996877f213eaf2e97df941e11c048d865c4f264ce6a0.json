{"ast":null,"code":"var _jsxFileName = \"/home/wabuor/Development/code/projects/phase-2/pars/src/App-working.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport Modal from \"./components/Modal\";\nimport eventsData from \"./Events.json\";\nimport ActivityRegistration from \"./ActivityRegistration\";\n// *** useNavigate\n// *** const navigate = useNavigate\n// *** function passing route to the registration form\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\nfunction Home() {\n  _s();\n  // Extract the events data array from the imported JSON data\n  const {\n    events\n  } = eventsData;\n  const [selected, setSelected] = useState(null);\n\n  // captures the open / close state of the modal\n  const [isOpen, setIsOpen] = useState(false);\n  // const [showCalender, setShowCalender] = useState(true);\n\n  const handleSelected = event => {\n    console.log(\"Selected Event:\", event);\n    setSelected(event);\n    setIsOpen(true);\n    // console.info('[handleSelected - event]', event);\n    const eventDetails = event;\n    // console.log(eventDetails);\n  };\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  const [registration, setRegistration] = useState(false);\n  const handleRegistration = () => {\n    setRegistration(true);\n    closeModal();\n    // setShowCalender(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Calendar\n    // selected={events.title}\n    , {\n      onSelectEvent: handleSelected,\n      localizer: localizer,\n      events: events,\n      startAccessor: \"startdate\",\n      endAccessor: \"enddate\",\n      style: {\n        height: 750,\n        margin: \"50px\"\n      }\n      // onClick={console.log(\"test\")}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), isOpen && selected &&\n    /*#__PURE__*/\n    //pass as props details of the selected event and also the close modal function\n    _jsxDEV(Modal, {\n      selectedEvent: selected,\n      closeModal: closeModal,\n      register: handleRegistration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), registration ? /*#__PURE__*/_jsxDEV(ActivityRegistration, {\n      eventDets: selected,\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"Dr905JAmtNE7y9bAKkSH0dovwlk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","React","useState","DatePicker","Modal","eventsData","ActivityRegistration","jsxDEV","_jsxDEV","locales","require","localizer","Home","_s","events","selected","setSelected","isOpen","setIsOpen","handleSelected","event","console","log","eventDetails","closeModal","registration","setRegistration","handleRegistration","className","children","onSelectEvent","startAccessor","endAccessor","style","height","margin","fileName","_jsxFileName","lineNumber","columnNumber","selectedEvent","register","eventDets","_c","$RefreshReg$"],"sources":["/home/wabuor/Development/code/projects/phase-2/pars/src/App-working.js"],"sourcesContent":["import \"./App.css\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport Modal from \"./components/Modal\";\nimport eventsData from \"./Events.json\";\nimport ActivityRegistration from \"./ActivityRegistration\";\n// *** useNavigate\n// *** const navigate = useNavigate\n// *** function passing route to the registration form\n\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\"),\n};\n\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales,\n});\n\n\nfunction Home() {\n  // Extract the events data array from the imported JSON data\n  const { events } = eventsData;\n\n  const [selected, setSelected] = useState(null);\n\n  // captures the open / close state of the modal\n  const [isOpen, setIsOpen] = useState(false);\n  // const [showCalender, setShowCalender] = useState(true);\n\n  const handleSelected = (event) => {\n    console.log(\"Selected Event:\", event);\n    setSelected(event);\n    setIsOpen(true);\n    // console.info('[handleSelected - event]', event);\n    const eventDetails = event;\n    // console.log(eventDetails);\n\n  };\n\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const [registration, setRegistration] = useState(false)\n  const handleRegistration = () => {\n    setRegistration(true);\n    closeModal();\n    // setShowCalender(false);\n\n  };\n\n \n\n  return (\n    <div className=\"App\">\n      <Calendar\n        // selected={events.title}\n        onSelectEvent={handleSelected}\n        localizer={localizer}\n        events={events}\n        startAccessor=\"startdate\"\n        endAccessor=\"enddate\"\n        style={{ height: 750, margin: \"50px\" }}\n        // onClick={console.log(\"test\")}\n      />\n      \n      {/* // checks if the state of the modal is true for open and whether and event is selected before proceeding */}\n      {isOpen && selected && (\n        //pass as props details of the selected event and also the close modal function\n        <Modal selectedEvent={selected} closeModal={closeModal} register={handleRegistration} />\n      )}\n\n      {registration ? ( <ActivityRegistration eventDets={selected} closeModal={closeModal} /> ) : (null)}\n     \n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}