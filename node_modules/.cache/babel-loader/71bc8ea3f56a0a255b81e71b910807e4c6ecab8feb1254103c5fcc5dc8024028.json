{"ast":null,"code":"var _jsxFileName = \"/home/wabuor/Development/code/projects/phase-2/pars/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\nconst events = [{\n  title: \"BIg MEeting\",\n  alldate: true,\n  start: \"2023-04-05\",\n  end: \"2023-04-05\"\n}, {\n  title: \"Vacation\",\n  start: \"2023-06-01\",\n  end: \"2023-06-03\"\n}, {\n  title: \"Conference\",\n  start: new Date(2023, 6, 0),\n  end: new Date(2023, 6, 0)\n}];\nfunction App() {\n  _s();\n  const [selected, setSelected] = useState();\n\n  // const [modalState, setModalState] = useState(false)\n  const [isOpen, setIsOpen] = useState(false);\n  const handleSelected = event => {\n    setSelected(event);\n    setIsOpen(true);\n    // console.info('[handleSelected - event]', event);\n    const eventDetails = event;\n    // console.log(eventDetails);\n    //  {if (isOpen == true) {\n    //     Modal();\n    //   }}\n  };\n\n  // function Modal(){\n  //   return <>\n  //   {/* {console.log(selected)} */}\n  //   <div className=\"modalBackground\">\n  //     <div className=\"modalContainer\">\n  //       <button> X </button>\n  //       <div className=\"title\">\n  //         <h1> Are you sure you want to continue?</h1>\n  //         </div>\n  //         <div className=\"body\">\n  //           <p> This would be pretty awesome. Move foward </p>\n  //           </div>\n  //           <div className=\"footer\">\n  //             <button>Cancel</button>\n  //             <button>Continue</button>\n  //       </div>\n  //     </div>\n  //   </div>\n  //   </>\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      selected: events.title,\n      onSelectEvent: handleSelected,\n      localizer: localizer,\n      events: events,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 750,\n        margin: \"50px\"\n      }\n      // onClick={console.log(\"test\")}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), isOpen ? /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kIDwaMlwTEmSQj6Gqr4IbZNLArA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","React","useState","DatePicker","Modal","jsxDEV","_jsxDEV","locales","require","localizer","events","title","alldate","start","end","Date","App","_s","selected","setSelected","isOpen","setIsOpen","handleSelected","event","eventDetails","className","children","onSelectEvent","startAccessor","endAccessor","style","height","margin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/wabuor/Development/code/projects/phase-2/pars/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport React, { useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport Modal from \"./Modal\";\n\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\"),\n};\n\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales,\n});\n\nconst events = [\n  {\n    title: \"BIg MEeting\",\n    alldate: true,\n    start: \"2023-04-05\",\n    end: \"2023-04-05\",\n  },\n  {\n    title: \"Vacation\",\n    start: \"2023-06-01\",\n    end: \"2023-06-03\",\n  },\n  {\n    title: \"Conference\",\n    start: new Date(2023, 6, 0),\n    end: new Date(2023, 6, 0),\n  },\n];\n\nfunction App() {\n  const [selected, setSelected] = useState();\n\n  // const [modalState, setModalState] = useState(false)\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleSelected = (event) => {\n    setSelected(event);\n    setIsOpen(true);\n    // console.info('[handleSelected - event]', event);\n    const eventDetails = event;\n    // console.log(eventDetails);\n  //  {if (isOpen == true) {\n  //     Modal();\n  //   }}\n   \n  };\n\n  // function Modal(){\n  //   return <>\n  //   {/* {console.log(selected)} */}\n  //   <div className=\"modalBackground\">\n  //     <div className=\"modalContainer\">\n  //       <button> X </button>\n  //       <div className=\"title\">\n  //         <h1> Are you sure you want to continue?</h1>\n  //         </div>\n  //         <div className=\"body\">\n  //           <p> This would be pretty awesome. Move foward </p>\n  //           </div>\n  //           <div className=\"footer\">\n  //             <button>Cancel</button>\n  //             <button>Continue</button>\n  //       </div>\n  //     </div>\n  //   </div>\n  //   </>\n  // }\n\n  return (\n    <div className=\"App\">\n      <Calendar\n        selected={events.title}\n        onSelectEvent={handleSelected}\n        localizer={localizer}\n        events={events}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 750, margin: \"50px\" }}\n        // onClick={console.log(\"test\")}\n      />\n      \n      {isOpen ? (\n        <Modal />\n      ) : (null)}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,gBAAgB,QAAQ,oBAAoB;AAC/D,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAO,mDAAmD;AAC1D,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,OAAO,GAAG;EACd,OAAO,EAAEC,OAAO,CAAC,uBAAuB;AAC1C,CAAC;AAED,MAAMC,SAAS,GAAGb,gBAAgB,CAAC;EACjCC,MAAM;EACNC,KAAK;EACLC,WAAW;EACXC,MAAM;EACNO;AACF,CAAC,CAAC;AAEF,MAAMG,MAAM,GAAG,CACb;EACEC,KAAK,EAAE,aAAa;EACpBC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,YAAY;EACnBC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,KAAK,EAAE,UAAU;EACjBE,KAAK,EAAE,YAAY;EACnBC,GAAG,EAAE;AACP,CAAC,EACD;EACEH,KAAK,EAAE,YAAY;EACnBE,KAAK,EAAE,IAAIE,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;EAC3BD,GAAG,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;AAC1B,CAAC,CACF;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,CAAC;;EAE1C;EACA,MAAM,CAACkB,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAE3C,MAAMoB,cAAc,GAAIC,KAAK,IAAK;IAChCJ,WAAW,CAACI,KAAK,CAAC;IAClBF,SAAS,CAAC,IAAI,CAAC;IACf;IACA,MAAMG,YAAY,GAAGD,KAAK;IAC1B;IACF;IACA;IACA;EAEA,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA,CAACX,QAAQ;MACPuB,QAAQ,EAAER,MAAM,CAACC,KAAM;MACvBgB,aAAa,EAAEL,cAAe;MAC9Bb,SAAS,EAAEA,SAAU;MACrBC,MAAM,EAAEA,MAAO;MACfkB,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAC,KAAK;MACjBC,KAAK,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEC,MAAM,EAAE;MAAO;MACrC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAEDhB,MAAM,gBACLd,OAAA,CAACF,KAAK;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,GACN,IAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACnB,EAAA,CAzDQD,GAAG;AAAAqB,EAAA,GAAHrB,GAAG;AA2DZ,eAAeA,GAAG;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}